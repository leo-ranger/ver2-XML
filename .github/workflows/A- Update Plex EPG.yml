name: A- Update Plex EPG

on:
  workflow_dispatch:
  schedule:
    - cron: '30 0 * * *'  # Runs daily at 00:30 UTC

jobs:
  clean-plex-epg:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create external folder if missing
        run: mkdir -p download_EPG/External

      - name: Download Plex US EPG
        run: curl -L -o download_EPG/External/Plex_US.xml https://raw.githubusercontent.com/matthuisman/i.mjh.nz/refs/heads/master/Plex/us.xml

      - name: Remove excluded channels and programs
        run: |
          ids=$(grep -oP '(?<=<channel id=")[^"]+' EPG/excluded/List.txt || true)
          for id in $ids; do
            echo "Removing channel id: $id"
            sed -i "/<channel id=\"$id\"/,/<\/channel>/d" download_EPG/External/Plex_US.xml
            sed -i "/<programme channel=\"$id\"/,/<\/programme>/d" download_EPG/External/Plex_US.xml
          done

      - name: Extract RCM channel to separate file
        run: |
          FILE="download_EPG/External/Plex_US.xml"
          OUT_DIR="download_EPG/individual/US_Plex"
          OUT_FILE="${OUT_DIR}/RCM.xml"
          CHANNEL_ID="5e20b730f2f8d5003d739db7-66bfb17c144c201b8b61c10d"

          mkdir -p "$OUT_DIR"

          echo "<?xml version='1.0' encoding='UTF-8'?> <!DOCTYPE tv SYSTEM 'xmltv.dtd'>" > "$OUT_FILE"
          echo "<tv>" >> "$OUT_FILE"

          awk -v id="$CHANNEL_ID" '
            $0 ~ "<channel id=\"" id "\"" {keep=1}
            keep {print}
            /<\/channel>/ && keep {keep=0}
          ' "$FILE" >> "$OUT_FILE"

          awk -v id="$CHANNEL_ID" '
            $0 ~ "<programme channel=\"" id "\"" {keep=1}
            keep {print}
            /<\/programme>/ && keep {keep=0}
          ' "$FILE" >> "$OUT_FILE"

          echo "</tv>" >> "$OUT_FILE"

      - name: Commit and push extracted RCM XML
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git pull --rebase --autostash
          git add download_EPG/individual/US_Plex/RCM.xml
          git commit -m "Extracted RCM channel XML $(date +%Y-%m-%d)" || echo "No changes to commit"
          git push

      - name: Remove RCM channel from main Plex EPG (before other fixes)
        run: |
          FILE="download_EPG/External/Plex_US.xml"
          CHANNEL_ID="5e20b730f2f8d5003d739db7-66bfb17c144c201b8b61c10d"
          sed -i "/<channel id=\"$CHANNEL_ID\"/,/<\/channel>/d" "$FILE"
          sed -i "/<programme channel=\"$CHANNEL_ID\"/,/<\/programme>/d" "$FILE"

      - name: Update QWEST channel Metadata (with Movie→Music swap)
        run: |
          FILE="download_EPG/External/Plex_US.xml"
          cp "$FILE" "${FILE}.qwest.bak"
          TARGET_ID="5e20b730f2f8d5003d739db7-60b0f65c0c8ffb002c821a75"
          awk -v id="$TARGET_ID" '
          BEGIN {
            RS="</programme>"; ORS=""
            icon = "<icon src=\"https://blogs.library.american.edu/mediaservices/wp-content/uploads/sites/6/2024/10/Qwest-TV-720x380.jpg\"/>"
          }
          {
            if ($0 ~ "programme channel=\"" id "\"") {
              gsub(/<icon[^>]*\/>/, "")
              gsub("<category>Movie</category>", "<category>Music</category>")
              $0 = gensub(/(<title[^>]*>.*?<\/title>)/, "\\1\n" icon, 1)
            }
            print $0 "</programme>\n"
          }' "${FILE}.qwest.bak" > "$FILE"

      - name: Update Trace Urban channel metadata (with Movie→Music swap)
        run: |
          FILE="download_EPG/External/Plex_US.xml"
          cp "$FILE" "${FILE}.traceurban.bak"
          TARGET_ID="5e20b730f2f8d5003d739db7-6322658be67cf9cd9011fcda"
          awk -v id="$TARGET_ID" '
          BEGIN {
            RS="</programme>"; ORS=""
            icon = "<icon src=\"https://provider-static.plex.tv/epg/cms/production/7ffb84ed-f5a5-4e57-973d-e1281b70fb17/trace_urban_artwork_horizontal_-_Nathan_BECKER.jpg\"/>"
          }
          {
            if ($0 ~ "programme channel=\"" id "\"") {
              gsub(/<icon[^>]*\/>/, "")
              gsub("<category>Movie</category>", "<category>Music</category>")
              $0 = gensub(/(<title[^>]*>.*?<\/title>)/, "\\1\n" icon, 1)
            }
            print $0 "</programme>\n"
          }' "${FILE}.traceurban.bak" > "$FILE"

      - name: Update Fuel TV channel metadata (add Sports category, no swap)
        run: |
          FILE="download_EPG/External/Plex_US.xml"
          cp "$FILE" "${FILE}.fueltv.bak"
          TARGET_ID="e20b730f2f8d5003d739db7-62d15f16001c04178f555e40"
          awk -v id="$TARGET_ID" '
          BEGIN {
            RS="</programme>"; ORS=""
            icon = "<icon src=\"https://cdn.broadbandtvnews.com/wp-content/uploads/2020/11/14111352/FTV_2.png\"/>"
            category = "<category>Sports</category>"
          }
          {
            if ($0 ~ "programme channel=\"" id "\"") {
              gsub(/<icon[^>]*\/>/, "")
              $0 = gensub(/(<title[^>]*>.*?<\/title>)/, "\\1\n" icon, 1)
              if ($0 !~ /<category>[[:space:]]*Sports[[:space:]]*<\/category>/) {
                sub(/<\/programme>$/, category "\n</programme>")
              }
            }
            print $0 "</programme>\n"
          }' "${FILE}.fueltv.bak" > "$FILE"

      - name: Fix XML Declaration formatting
        run: |
          for f in download_EPG/External/*.xml; do
            sed -i "1s|<?xml version=\"1.0\" encoding=\"UTF-8\"?>|<?xml version='1.0' encoding='UTF-8'?> |" "$f"
            sed -i "1s|?><!DOCTYPE|?> <!DOCTYPE|" "$f"
          done

      - name: Fix misplaced closing tags at end of file
        run: |
          for f in download_EPG/External/*.xml; do
            awk '
              /<\/tv>/ {tvClosed=1; print; next}
              tvClosed && /<\/programme>/ {next}
              {print}
            ' "$f" > "${f}.fixed"
            mv "${f}.fixed" "$f"
          done

      - name: Commit and push cleaned Plex EPG (RCM removed, metadata updated)
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git pull --rebase --autostash
          git add download_EPG/External/Plex_US.xml
          git commit -m "Cleaned Plex EPG without RCM $(date +%Y-%m-%d)" || echo "No changes to commit"
          git push
